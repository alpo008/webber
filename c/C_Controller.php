<?phpnamespace c;/** * Базовый класс контроллера * @property array $params  массив с параметрами - аналог $_GET */abstract class C_Controller{	protected $params;    /**     * Генерация внешнего шаблона     * @return mixed     */	protected abstract function render();	    /**     * Функция отрабатывающая до основного метода     * @return mixed     */	protected abstract function before();    /**     * @param string $action     * @param array|null $params     */	public function Request($action, $params = null)	{		$this->params = $params;		$this->before();		$this->$action();		$this->render();	}	    /**     * Запрос произведен методом GET?     * @return bool     */    protected function IsGet()	{		return $_SERVER['REQUEST_METHOD'] == 'GET';	}    /**     * Запрос произведен методом POST?     * @return bool     */	protected function IsPost()	{		return $_SERVER['REQUEST_METHOD'] == 'POST';	}    /**     * @param string $fileName     * @param array $vars     * @return false|string     */	protected function Template($fileName, $vars = array())	{		// Установка переменных для шаблона.		foreach ($vars as $k => $v)		{			$$k = $v;		}		// Генерация HTML в строку.		ob_start();		include "$fileName";		return ob_get_clean();		}		    /**     * Если вызвали метод, которого не существует - завершаем работу     * @param string $name     * @param mixed $params     */	public function __call($name, $params){        die('Ошибка 404. Запрошенный Вами адрес не найден.');	}    /**     * Переадресация     * @param string $url     */	protected function redirect($url){			if($url[0] == '/')			$url = BASE_URL . substr($url, 1);		header("location: $url");		exit();	}}